name: ci


on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Dependencies
        run: |
          pip install -r requirements-dev.txt

      - name: Lint with mypy
        run: |
          mypy . --install-types --non-interactive

  superlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint code base
        uses: docker://ghcr.io/github/super-linter:slim-v4.9.4
        env:
          DEFAULT_BRANCH: dev
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSCPD: false
          VALIDATE_PYTHON_MYPY: false
          KUBERNETES_KUBEVAL_OPTIONS: --ignore-missing-schemas
          PYTHON_ISORT_CONFIG_FILE: setup.cfg
          PYTHON_PYLINT_CONFIG_FILE: .python-lint
          PYTHON_FLAKE8_CONFIG_FILE: setup.cfg
          VALIDATE_ALL_CODEBASE: false

  check_notebooks_stripped:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}

      - name: Install Dependencies
        run: |
          pip install -r requirements-dev.txt

      - name: Check notebooks are stripped
        run: bash "${GITHUB_WORKSPACE}"/nbstripout_script.sh

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Test
        run: |
          pip install pytest pytest-env pytest-mock coverage
          coverage run --source=./dpp_helpline_qa -m pytest ./tests --junitxml=./tests.xml
          coverage report -m
          coverage xml
